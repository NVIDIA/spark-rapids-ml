"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Must set the package into spark.connect if importing spark/connect/relations.proto
package spark.connect;
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TuningRelation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CV_FIELD_NUMBER: builtins.int
    @property
    def cv(self) -> global___CrossValidatorRelation: ...
    def __init__(
        self,
        *,
        cv: global___CrossValidatorRelation | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cv", b"cv", "relation_type", b"relation_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cv", b"cv", "relation_type", b"relation_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["relation_type", b"relation_type"]) -> typing_extensions.Literal["cv"] | None: ...

global___TuningRelation = TuningRelation

class CrossValidatorRelation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UID_FIELD_NUMBER: builtins.int
    ESTIMATOR_FIELD_NUMBER: builtins.int
    ESTIMATOR_PARAM_MAPS_FIELD_NUMBER: builtins.int
    EVALUATOR_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    uid: builtins.str
    """(Required) Unique id of the ML operator"""
    @property
    def estimator(self) -> global___MlOperator:
        """(Required) the estimator info"""
    estimator_param_maps: builtins.str
    """(Required) the estimator parameter maps info"""
    @property
    def evaluator(self) -> global___MlOperator:
        """(Required) the evaluator info"""
    params: builtins.str
    """parameters of CrossValidator"""
    dataset: builtins.bytes
    """Can't use Relation directly due to shading issue in spark connect"""
    def __init__(
        self,
        *,
        uid: builtins.str = ...,
        estimator: global___MlOperator | None = ...,
        estimator_param_maps: builtins.str = ...,
        evaluator: global___MlOperator | None = ...,
        params: builtins.str | None = ...,
        dataset: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_dataset", b"_dataset", "_params", b"_params", "dataset", b"dataset", "estimator", b"estimator", "evaluator", b"evaluator", "params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_dataset", b"_dataset", "_params", b"_params", "dataset", b"dataset", "estimator", b"estimator", "estimator_param_maps", b"estimator_param_maps", "evaluator", b"evaluator", "params", b"params", "uid", b"uid"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dataset", b"_dataset"]) -> typing_extensions.Literal["dataset"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_params", b"_params"]) -> typing_extensions.Literal["params"] | None: ...

global___CrossValidatorRelation = CrossValidatorRelation

class MlOperator(google.protobuf.message.Message):
    """MLOperator represents the ML operators like (Estimator, Transformer or Evaluator)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _OperatorType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _OperatorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[MlOperator._OperatorType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        OPERATOR_TYPE_UNSPECIFIED: MlOperator._OperatorType.ValueType  # 0
        OPERATOR_TYPE_ESTIMATOR: MlOperator._OperatorType.ValueType  # 1
        """ML estimator"""
        OPERATOR_TYPE_TRANSFORMER: MlOperator._OperatorType.ValueType  # 2
        """ML transformer (non-model)"""
        OPERATOR_TYPE_EVALUATOR: MlOperator._OperatorType.ValueType  # 3
        """ML evaluator"""
        OPERATOR_TYPE_MODEL: MlOperator._OperatorType.ValueType  # 4
        """ML model"""

    class OperatorType(_OperatorType, metaclass=_OperatorTypeEnumTypeWrapper): ...
    OPERATOR_TYPE_UNSPECIFIED: MlOperator.OperatorType.ValueType  # 0
    OPERATOR_TYPE_ESTIMATOR: MlOperator.OperatorType.ValueType  # 1
    """ML estimator"""
    OPERATOR_TYPE_TRANSFORMER: MlOperator.OperatorType.ValueType  # 2
    """ML transformer (non-model)"""
    OPERATOR_TYPE_EVALUATOR: MlOperator.OperatorType.ValueType  # 3
    """ML evaluator"""
    OPERATOR_TYPE_MODEL: MlOperator.OperatorType.ValueType  # 4
    """ML model"""

    NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """(Required) The qualified name of the ML operator."""
    uid: builtins.str
    """(Required) Unique id of the ML operator"""
    type: global___MlOperator.OperatorType.ValueType
    """(Required) Represents what the ML operator is"""
    params: builtins.str
    """(Optional) parameters of the operator which is a json string"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        uid: builtins.str = ...,
        type: global___MlOperator.OperatorType.ValueType = ...,
        params: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_params", b"_params", "params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_params", b"_params", "name", b"name", "params", b"params", "type", b"type", "uid", b"uid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_params", b"_params"]) -> typing_extensions.Literal["params"] | None: ...

global___MlOperator = MlOperator
